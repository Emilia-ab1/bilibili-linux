// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "dynamic.proto" (package "bilibili.app.dynamic.v2", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * 动态详情页-响应
 *
 * @generated from protobuf message bilibili.app.dynamic.v2.DynDetailReply
 */
export interface DynDetailReply {
    /**
     * 动态详情
     *
     * @generated from protobuf field: bilibili.app.dynamic.v2.DynamicItem item = 1
     */
    item?: DynamicItem;
}
/**
 * 动态详情页-请求
 *
 * @generated from protobuf message bilibili.app.dynamic.v2.DynDetailReq
 */
export interface DynDetailReq {
    /**
     * 动态ID
     *
     * @generated from protobuf field: string dynamic_id = 2
     */
    dynamicId: string;
}
/**
 * 动态卡片
 *
 * @generated from protobuf message bilibili.app.dynamic.v2.DynamicItem
 */
export interface DynamicItem {
    /**
     * 动态卡片类型
     *
     * @generated from protobuf field: bilibili.app.dynamic.v2.DynamicType card_type = 1
     */
    cardType: DynamicType;
    /**
     * 转发类型下，源卡片类型
     *
     * @generated from protobuf field: bilibili.app.dynamic.v2.DynamicType item_type = 2
     */
    itemType: DynamicType;
    /**
     * 模块内容
     *
     * @generated from protobuf field: repeated bilibili.app.dynamic.v2.Module modules = 3
     */
    modules: Module[];
    /**
     * 操作相关字段
     * Extend extend = 4;
     * 该卡片下面是否含有折叠卡
     *
     * @generated from protobuf field: int32 has_fold = 5
     */
    hasFold: number;
    /**
     * 透传到客户端的埋点字段。
     *
     * @generated from protobuf field: string server_info = 6
     */
    serverInfo: string;
}
/**
 * 动态模块
 *
 * @generated from protobuf message bilibili.app.dynamic.v2.Module
 */
export interface Module {
    /**
     * 类型
     *
     * @generated from protobuf field: bilibili.app.dynamic.v2.DynModuleType module_type = 1
     */
    moduleType: DynModuleType;
    /**
     * @generated from protobuf oneof: module_item
     */
    moduleItem: {
        oneofKind: "moduleDynamic";
        /**
         * // 用户模块 1
         * ModuleAuthor module_author = 2;
         * // 争议黄条模块 2
         * ModuleDispute module_dispute = 3;
         * // 动态正文模块 3
         * ModuleDesc module_desc = 4;
         * 动态卡模块 4
         *
         * @generated from protobuf field: bilibili.app.dynamic.v2.ModuleDynamic module_dynamic = 5
         */
        moduleDynamic: ModuleDynamic; // // 点赞外露(废弃)        // ModuleLikeUser module_likeUser = 6;        // // 小卡模块 6        // ModuleExtend module_extend = 7;        // // 大卡模块 5        // ModuleAdditional module_additional = 8;        // // 计数模块 8        // ModuleStat module_stat = 9;        // // 折叠模块 9        // ModuleFold module_fold = 10;        // // 评论外露(废弃)        // ModuleComment module_comment = 11;        // // 外露交互模块(点赞、评论) 7        // ModuleInteraction module_interaction = 12;        // // 转发卡-原卡用户模块        // ModuleAuthorForward module_author_forward = 13;        // // 广告卡        // ModuleAd module_ad = 14;        // // 通栏        // ModuleBanner module_banner = 15;        // // 获取物料失败        // ModuleItemNull module_item_null = 16;        // // 分享组件        // ModuleShareInfo module_share_info = 17;        // // 相关推荐模块        // ModuleRecommend module_recommend = 18;        // // 顶部模块        // ModuleTop module_top = 19;        // // 底部模块        // ModuleButtom module_buttom = 20;        // // 转发卡计数模块        // ModuleStat module_stat_forward = 21;        // //        // ModuleStory module_story = 22;        // //        // ModuleTopic module_topic = 23;        // //        // ModuleTopicDetailsExt module_topic_details_ext = 24;        // //        // ModuleTopTag module_top_tag = 25;        // //        // ModuleTopicBrief module_topic_brief = 26;        // //        // ModuleTitle module_title = 27;        // //         // ModuleButton module_button = 28;        // //         // ModuleNotice module_notice = 29;        // //         // ModuleOpusSummary module_opus_summary = 30;        // //         // ModuleCopyright module_copyright = 31;        // //         // ModuleParagraph module_paragraph = 32;        // //         // ModuleBlocked module_blocked = 33;        // //         // ModuleTextNotice module_text_notice = 34;        // //         // ModuleOpusCollection module_opus_collection = 35;    } | {
        oneofKind: undefined;
    };
}
/**
 * 动态-详情模块
 *
 * @generated from protobuf message bilibili.app.dynamic.v2.ModuleDynamic
 */
export interface ModuleDynamic {
    /**
     * 类型
     *
     * @generated from protobuf field: bilibili.app.dynamic.v2.ModuleDynamicType type = 1
     */
    type: ModuleDynamicType;
    /**
     * @generated from protobuf oneof: module_item
     */
    moduleItem: {
        oneofKind: "dynArchive";
        /**
         * 稿件
         *
         * @generated from protobuf field: bilibili.app.dynamic.v2.MdlDynArchive dyn_archive = 2
         */
        dynArchive: MdlDynArchive; // //pgc        // MdlDynPGC dyn_pgc = 3;        // //付费课程-系列        // MdlDynCourSeason dyn_cour_season = 4;        // //付费课程-批次        // MdlDynCourBatch dyn_cour_batch = 5;        // //转发卡        // MdlDynForward dyn_forward = 6;        // //图文        // MdlDynDraw dyn_draw = 7;        // //专栏        // MdlDynArticle dyn_article = 8;        // //音频        // MdlDynMusic dyn_music = 9;        // //通用卡方        // MdlDynCommon dyn_common = 10;        // //直播卡        // MdlDynLive dyn_common_live = 11;        // //播单        // MdlDynMedialist dyn_medialist = 12;        // //小程序卡        // MdlDynApplet dyn_applet = 13;        // //订阅卡        // MdlDynSubscription dyn_subscription = 14;        // //直播推荐卡        // MdlDynLiveRcmd dyn_live_rcmd = 15;        // //UGC合集        // MdlDynUGCSeason dyn_ugc_season = 16;        // //订阅卡        // MdlDynSubscriptionNew dyn_subscription_new = 17;        // //课程        // MdlDynCourUp dyn_cour_batch_up = 18;        // //话题集合        // MdlDynTopicSet dyn_topic_set = 19;    } | {
        oneofKind: undefined;
    };
}
/**
 * 动态-详情模块-稿件
 *
 * @generated from protobuf message bilibili.app.dynamic.v2.MdlDynArchive
 */
export interface MdlDynArchive {
    /**
     * 标题
     *
     * @generated from protobuf field: string title = 1
     */
    title: string;
    /**
     * 封面图
     *
     * @generated from protobuf field: string cover = 2
     */
    cover: string;
    /**
     * 秒开地址
     *
     * @generated from protobuf field: string uri = 3
     */
    uri: string;
    /**
     * 视频封面展示项 1
     *
     * @generated from protobuf field: string cover_left_text_1 = 4
     */
    coverLeftText1: string;
    /**
     * 视频封面展示项 2
     *
     * @generated from protobuf field: string cover_left_text_2 = 5
     */
    coverLeftText2: string;
    /**
     * 封面视频展示项 3
     *
     * @generated from protobuf field: string cover_left_text_3 = 6
     */
    coverLeftText3: string;
    /**
     * avid
     *
     * @generated from protobuf field: int64 avid = 7
     */
    avid: bigint;
    /**
     * cid
     *
     * @generated from protobuf field: int64 cid = 8
     */
    cid: bigint;
    /**
     * 视频源类型
     *
     * @generated from protobuf field: bilibili.app.dynamic.v2.MediaType media_type = 9
     */
    mediaType: MediaType;
    /**
     * 尺寸信息
     *
     * @generated from protobuf field: bilibili.app.dynamic.v2.Dimension dimension = 10
     */
    dimension?: Dimension;
    /**
     * 角标，多个角标之前有间距
     *
     * @generated from protobuf field: repeated bilibili.app.dynamic.v2.VideoBadge badge = 11
     */
    badge: VideoBadge[];
    /**
     * 是否能够自动播放
     *
     * @generated from protobuf field: bool can_play = 12
     */
    canPlay: boolean;
    /**
     * stype
     *
     * @generated from protobuf field: bilibili.app.dynamic.v2.VideoType stype = 13
     */
    stype: VideoType;
    /**
     * 是否PGC
     *
     * @generated from protobuf field: bool isPGC = 14
     */
    isPGC: boolean;
    /**
     * inline播放地址
     *
     * @generated from protobuf field: string inlineURL = 15
     */
    inlineURL: string;
    /**
     * PGC的epid
     *
     * @generated from protobuf field: int64 EpisodeId = 16
     */
    episodeId: bigint;
    /**
     * 子类型
     *
     * @generated from protobuf field: int32 SubType = 17
     */
    subType: number;
    /**
     * PGC的ssid
     *
     * @generated from protobuf field: int64 PgcSeasonId = 18
     */
    pgcSeasonId: bigint;
    /**
     * 播放按钮
     *
     * @generated from protobuf field: string play_icon = 19
     */
    playIcon: string;
    /**
     * 时长
     *
     * @generated from protobuf field: int64 duration = 20
     */
    duration: bigint;
    /**
     * 跳转地址
     *
     * @generated from protobuf field: string jump_url = 21
     */
    jumpUrl: string;
    /**
     * 番剧是否为预览视频
     *
     * @generated from protobuf field: bool is_preview = 22
     */
    isPreview: boolean;
    /**
     * 新角标，多个角标之前没有间距
     *
     * @generated from protobuf field: repeated bilibili.app.dynamic.v2.VideoBadge badge_category = 23
     */
    badgeCategory: VideoBadge[];
    /**
     * 当前是否是pgc正片
     *
     * @generated from protobuf field: bool is_feature = 24
     */
    isFeature: boolean;
    /**
     * 是否是预约召回
     *
     * @generated from protobuf field: bilibili.app.dynamic.v2.ReserveType reserve_type = 25
     */
    reserveType: ReserveType;
    /**
     * bvid
     *
     * @generated from protobuf field: string bvid = 26
     */
    bvid: string;
    /**
     * 播放数
     *
     * @generated from protobuf field: int32 view = 27
     */
    view: number;
    /**
     *
     *
     * @generated from protobuf field: bool show_premiere_badge = 28
     */
    showPremiereBadge: boolean;
    /**
     *
     *
     * @generated from protobuf field: bool premiere_card = 29
     */
    premiereCard: boolean;
    /**
     *
     *
     * @generated from protobuf field: bool show_progress = 30
     */
    showProgress: boolean;
    /**
     *
     *
     * @generated from protobuf field: int64 part_duration = 31
     */
    partDuration: bigint;
    /**
     *
     *
     * @generated from protobuf field: int64 part_progress = 32
     */
    partProgress: bigint;
}
/**
 * 尺寸信息
 *
 * @generated from protobuf message bilibili.app.dynamic.v2.Dimension
 */
export interface Dimension {
    /**
     *
     *
     * @generated from protobuf field: int64 height = 1
     */
    height: bigint;
    /**
     *
     *
     * @generated from protobuf field: int64 width = 2
     */
    width: bigint;
    /**
     *
     *
     * @generated from protobuf field: int64 rotate = 3
     */
    rotate: bigint;
}
/**
 * 角标信息
 *
 * @generated from protobuf message bilibili.app.dynamic.v2.VideoBadge
 */
export interface VideoBadge {
    /**
     * 文案
     *
     * @generated from protobuf field: string text = 1
     */
    text: string;
    /**
     * 文案颜色-日间
     *
     * @generated from protobuf field: string text_color = 2
     */
    textColor: string;
    /**
     * 文案颜色-夜间
     *
     * @generated from protobuf field: string text_color_night = 3
     */
    textColorNight: string;
    /**
     * 背景颜色-日间
     *
     * @generated from protobuf field: string bg_color = 4
     */
    bgColor: string;
    /**
     * 背景颜色-夜间
     *
     * @generated from protobuf field: string bg_color_night = 5
     */
    bgColorNight: string;
    /**
     * 边框颜色-日间
     *
     * @generated from protobuf field: string border_color = 6
     */
    borderColor: string;
    /**
     * 边框颜色-夜间
     *
     * @generated from protobuf field: string border_color_night = 7
     */
    borderColorNight: string;
    /**
     * 样式
     *
     * @generated from protobuf field: int32 bg_style = 8
     */
    bgStyle: number;
    /**
     * 背景透明度-日间
     *
     * @generated from protobuf field: int32 bg_alpha = 9
     */
    bgAlpha: number;
    /**
     * 背景透明度-夜间
     *
     * @generated from protobuf field: int32 bg_alpha_night = 10
     */
    bgAlphaNight: number;
}
/**
 * @generated from protobuf message bilibili.app.dynamic.v2.Device
 */
export interface Device {
    /**
     * @generated from protobuf field: int32 app_id = 1
     */
    appId: number;
    /**
     * @generated from protobuf field: int32 build = 2
     */
    build: number;
    /**
     * @generated from protobuf field: string buvid = 3
     */
    buvid: string;
    /**
     * @generated from protobuf field: string mobi_app = 4
     */
    mobiApp: string;
    /**
     * @generated from protobuf field: string platform = 5
     */
    platform: string;
    /**
     * @generated from protobuf field: string device = 6
     */
    device: string;
    /**
     * @generated from protobuf field: string channel = 7
     */
    channel: string;
    /**
     * @generated from protobuf field: string brand = 8
     */
    brand: string;
    /**
     * @generated from protobuf field: string model = 9
     */
    model: string;
    /**
     * @generated from protobuf field: string osver = 10
     */
    osver: string;
    /**
     * @generated from protobuf field: string fp_local = 11
     */
    fpLocal: string;
    /**
     * @generated from protobuf field: string fp_remote = 12
     */
    fpRemote: string;
    /**
     * @generated from protobuf field: string version_name = 13
     */
    versionName: string;
    /**
     * @generated from protobuf field: string fp = 14
     */
    fp: string;
    /**
     * @generated from protobuf field: int64 fts = 15
     */
    fts: bigint;
}
/**
 * @generated from protobuf message bilibili.app.dynamic.v2.Metadata
 */
export interface Metadata {
    /**
     * @generated from protobuf field: string access_key = 1
     */
    accessKey: string;
    /**
     * @generated from protobuf field: string mobi_app = 2
     */
    mobiApp: string;
    /**
     * @generated from protobuf field: string device = 3
     */
    device: string;
    /**
     * @generated from protobuf field: int32 build = 4
     */
    build: number;
    /**
     * @generated from protobuf field: string channel = 5
     */
    channel: string;
    /**
     * @generated from protobuf field: string buvid = 6
     */
    buvid: string;
    /**
     * @generated from protobuf field: string platform = 7
     */
    platform: string;
}
/**
 * 枚举-动态类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.DynamicType
 */
export enum DynamicType {
    /**
     * 占位
     *
     * @generated from protobuf enum value: dyn_none = 0;
     */
    dyn_none = 0,
    /**
     * 转发
     *
     * @generated from protobuf enum value: forward = 1;
     */
    forward = 1,
    /**
     * 稿件: ugc、小视频、短视频、UGC转PGC
     *
     * @generated from protobuf enum value: av = 2;
     */
    av = 2,
    /**
     * pgc：番剧、PGC番剧、PGC电影、PGC电视剧、PGC国创、PGC纪录片
     *
     * @generated from protobuf enum value: pgc = 3;
     */
    pgc = 3,
    /**
     * 付费更新批次
     *
     * @generated from protobuf enum value: courses = 4;
     */
    courses = 4,
    /**
     * 折叠
     *
     * @generated from protobuf enum value: fold = 5;
     */
    fold = 5,
    /**
     * 纯文字
     *
     * @generated from protobuf enum value: word = 6;
     */
    word = 6,
    /**
     * 图文
     *
     * @generated from protobuf enum value: draw = 7;
     */
    draw = 7,
    /**
     * 专栏 原仅phone端
     *
     * @generated from protobuf enum value: article = 8;
     */
    article = 8,
    /**
     * 音频 原仅phone端
     *
     * @generated from protobuf enum value: music = 9;
     */
    music = 9,
    /**
     * 通用卡 方形
     *
     * @generated from protobuf enum value: common_square = 10;
     */
    common_square = 10,
    /**
     * 通用卡 竖形
     *
     * @generated from protobuf enum value: common_vertical = 11;
     */
    common_vertical = 11,
    /**
     * 直播卡 只有转发态
     *
     * @generated from protobuf enum value: live = 12;
     */
    live = 12,
    /**
     * 播单 原仅phone端 只有转发态
     *
     * @generated from protobuf enum value: medialist = 13;
     */
    medialist = 13,
    /**
     * 付费更新批次 只有转发态
     *
     * @generated from protobuf enum value: courses_season = 14;
     */
    courses_season = 14,
    /**
     * 广告卡
     *
     * @generated from protobuf enum value: ad = 15;
     */
    ad = 15,
    /**
     * 小程序卡
     *
     * @generated from protobuf enum value: applet = 16;
     */
    applet = 16,
    /**
     * 订阅卡
     *
     * @generated from protobuf enum value: subscription = 17;
     */
    subscription = 17,
    /**
     * 直播推荐卡
     *
     * @generated from protobuf enum value: live_rcmd = 18;
     */
    live_rcmd = 18,
    /**
     * 通栏
     *
     * @generated from protobuf enum value: banner = 19;
     */
    banner = 19,
    /**
     * 合集卡
     *
     * @generated from protobuf enum value: ugc_season = 20;
     */
    ugc_season = 20,
    /**
     * 新订阅卡
     *
     * @generated from protobuf enum value: subscription_new = 21;
     */
    subscription_new = 21,
    /**
     *
     *
     * @generated from protobuf enum value: story = 22;
     */
    story = 22,
    /**
     *
     *
     * @generated from protobuf enum value: topic_rcmd = 23;
     */
    topic_rcmd = 23,
    /**
     *
     *
     * @generated from protobuf enum value: cour_up = 24;
     */
    cour_up = 24,
    /**
     *
     *
     * @generated from protobuf enum value: topic_set = 25;
     */
    topic_set = 25,
    /**
     *
     *
     * @generated from protobuf enum value: notice = 26;
     */
    notice = 26,
    /**
     *
     *
     * @generated from protobuf enum value: text_notice = 27;
     */
    text_notice = 27
}
/**
 * 动态模块类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.DynModuleType
 */
export enum DynModuleType {
    /**
     * 占位
     *
     * @generated from protobuf enum value: module_none = 0;
     */
    module_none = 0,
    /**
     * 发布人模块
     *
     * @generated from protobuf enum value: module_author = 1;
     */
    module_author = 1,
    /**
     * 争议小黄条
     *
     * @generated from protobuf enum value: module_dispute = 2;
     */
    module_dispute = 2,
    /**
     * 描述文案
     *
     * @generated from protobuf enum value: module_desc = 3;
     */
    module_desc = 3,
    /**
     * 动态卡片
     *
     * @generated from protobuf enum value: module_dynamic = 4;
     */
    module_dynamic = 4,
    /**
     * 转发模块
     *
     * @generated from protobuf enum value: module_forward = 5;
     */
    module_forward = 5,
    /**
     * 点赞用户(废弃)
     *
     * @generated from protobuf enum value: module_likeUser = 6;
     */
    module_likeUser = 6,
    /**
     * 小卡模块
     *
     * @generated from protobuf enum value: module_extend = 7;
     */
    module_extend = 7,
    /**
     * 附加卡
     *
     * @generated from protobuf enum value: module_additional = 8;
     */
    module_additional = 8,
    /**
     * 计数信息
     *
     * @generated from protobuf enum value: module_stat = 9;
     */
    module_stat = 9,
    /**
     * 折叠
     *
     * @generated from protobuf enum value: module_fold = 10;
     */
    module_fold = 10,
    /**
     * 评论外露(废弃)
     *
     * @generated from protobuf enum value: module_comment = 11;
     */
    module_comment = 11,
    /**
     * 外露交互模块(点赞、评论)
     *
     * @generated from protobuf enum value: module_interaction = 12;
     */
    module_interaction = 12,
    /**
     * 转发卡的发布人模块
     *
     * @generated from protobuf enum value: module_author_forward = 13;
     */
    module_author_forward = 13,
    /**
     * 广告卡模块
     *
     * @generated from protobuf enum value: module_ad = 14;
     */
    module_ad = 14,
    /**
     * 通栏模块
     *
     * @generated from protobuf enum value: module_banner = 15;
     */
    module_banner = 15,
    /**
     * 获取物料失败模块
     *
     * @generated from protobuf enum value: module_item_null = 16;
     */
    module_item_null = 16,
    /**
     * 分享组件
     *
     * @generated from protobuf enum value: module_share_info = 17;
     */
    module_share_info = 17,
    /**
     * 相关推荐模块
     *
     * @generated from protobuf enum value: module_recommend = 18;
     */
    module_recommend = 18,
    /**
     * 转发卡计数信息
     *
     * @generated from protobuf enum value: module_stat_forward = 19;
     */
    module_stat_forward = 19,
    /**
     * 顶部模块
     *
     * @generated from protobuf enum value: module_top = 20;
     */
    module_top = 20,
    /**
     * 底部模块
     *
     * @generated from protobuf enum value: module_bottom = 21;
     */
    module_bottom = 21,
    /**
     *
     *
     * @generated from protobuf enum value: module_story = 22;
     */
    module_story = 22,
    /**
     *
     *
     * @generated from protobuf enum value: module_topic = 23;
     */
    module_topic = 23,
    /**
     *
     *
     * @generated from protobuf enum value: module_topic_details_ext = 24;
     */
    module_topic_details_ext = 24,
    /**
     *
     *
     * @generated from protobuf enum value: module_top_tag = 25;
     */
    module_top_tag = 25,
    /**
     *
     *
     * @generated from protobuf enum value: module_topic_brief = 26;
     */
    module_topic_brief = 26,
    /**
     *
     *
     * @generated from protobuf enum value: module_title = 27;
     */
    module_title = 27,
    /**
     * @generated from protobuf enum value: module_button = 28;
     */
    module_button = 28,
    /**
     * @generated from protobuf enum value: module_notice = 29;
     */
    module_notice = 29,
    /**
     * @generated from protobuf enum value: module_opus_summary = 30;
     */
    module_opus_summary = 30,
    /**
     * @generated from protobuf enum value: module_copyright = 31;
     */
    module_copyright = 31,
    /**
     * @generated from protobuf enum value: module_paragraph = 32;
     */
    module_paragraph = 32,
    /**
     * @generated from protobuf enum value: module_blocked = 33;
     */
    module_blocked = 33,
    /**
     * @generated from protobuf enum value: module_text_notice = 34;
     */
    module_text_notice = 34,
    /**
     * @generated from protobuf enum value: module_opus_collection = 35;
     */
    module_opus_collection = 35
}
/**
 * 动态详情模块类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.ModuleDynamicType
 */
export enum ModuleDynamicType {
    /**
     * 稿件
     *
     * @generated from protobuf enum value: mdl_dyn_archive = 0;
     */
    mdl_dyn_archive = 0,
    /**
     * pgc
     *
     * @generated from protobuf enum value: mdl_dyn_pgc = 1;
     */
    mdl_dyn_pgc = 1,
    /**
     * 付费课程-系列
     *
     * @generated from protobuf enum value: mdl_dyn_cour_season = 2;
     */
    mdl_dyn_cour_season = 2,
    /**
     * 付费课程-批次
     *
     * @generated from protobuf enum value: mdl_dyn_cour_batch = 3;
     */
    mdl_dyn_cour_batch = 3,
    /**
     * 转发卡
     *
     * @generated from protobuf enum value: mdl_dyn_forward = 4;
     */
    mdl_dyn_forward = 4,
    /**
     * 图文
     *
     * @generated from protobuf enum value: mdl_dyn_draw = 5;
     */
    mdl_dyn_draw = 5,
    /**
     * 专栏
     *
     * @generated from protobuf enum value: mdl_dyn_article = 6;
     */
    mdl_dyn_article = 6,
    /**
     * 音频
     *
     * @generated from protobuf enum value: mdl_dyn_music = 7;
     */
    mdl_dyn_music = 7,
    /**
     * 通用卡方
     *
     * @generated from protobuf enum value: mdl_dyn_common = 8;
     */
    mdl_dyn_common = 8,
    /**
     * 直播卡
     *
     * @generated from protobuf enum value: mdl_dyn_live = 9;
     */
    mdl_dyn_live = 9,
    /**
     * 播单
     *
     * @generated from protobuf enum value: mdl_dyn_medialist = 10;
     */
    mdl_dyn_medialist = 10,
    /**
     * 小程序卡
     *
     * @generated from protobuf enum value: mdl_dyn_applet = 11;
     */
    mdl_dyn_applet = 11,
    /**
     * 订阅卡
     *
     * @generated from protobuf enum value: mdl_dyn_subscription = 12;
     */
    mdl_dyn_subscription = 12,
    /**
     * 直播推荐卡
     *
     * @generated from protobuf enum value: mdl_dyn_live_rcmd = 13;
     */
    mdl_dyn_live_rcmd = 13,
    /**
     * UGC合集
     *
     * @generated from protobuf enum value: mdl_dyn_ugc_season = 14;
     */
    mdl_dyn_ugc_season = 14,
    /**
     * 订阅卡
     *
     * @generated from protobuf enum value: mdl_dyn_subscription_new = 15;
     */
    mdl_dyn_subscription_new = 15,
    /**
     * 课程
     *
     * @generated from protobuf enum value: mdl_dyn_cour_batch_up = 16;
     */
    mdl_dyn_cour_batch_up = 16,
    /**
     * 话题集合
     *
     * @generated from protobuf enum value: mdl_dyn_topic_set = 17;
     */
    mdl_dyn_topic_set = 17
}
/**
 * 播放器类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.MediaType
 */
export enum MediaType {
    /**
     * 本地
     *
     * @generated from protobuf enum value: MediaTypeNone = 0;
     */
    MediaTypeNone = 0,
    /**
     * UGC
     *
     * @generated from protobuf enum value: MediaTypeUGC = 1;
     */
    MediaTypeUGC = 1,
    /**
     * PGC
     *
     * @generated from protobuf enum value: MediaTypePGC = 2;
     */
    MediaTypePGC = 2,
    /**
     * 直播
     *
     * @generated from protobuf enum value: MediaTypeLive = 3;
     */
    MediaTypeLive = 3,
    /**
     * 小视频
     *
     * @generated from protobuf enum value: MediaTypeVCS = 4;
     */
    MediaTypeVCS = 4
}
/**
 * 视频类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.VideoType
 */
export enum VideoType {
    /**
     * 普通视频
     *
     * @generated from protobuf enum value: video_type_general = 0;
     */
    video_type_general = 0,
    /**
     * 动态视频
     *
     * @generated from protobuf enum value: video_type_dynamic = 1;
     */
    video_type_dynamic = 1,
    /**
     * 直播回放视频
     *
     * @generated from protobuf enum value: video_type_playback = 2;
     */
    video_type_playback = 2,
    /**
     *
     *
     * @generated from protobuf enum value: video_type_story = 3;
     */
    video_type_story = 3
}
/**
 *
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.ReserveType
 */
export enum ReserveType {
    /**
     * 占位
     *
     * @generated from protobuf enum value: reserve_none = 0;
     */
    reserve_none = 0,
    /**
     * 预约召回
     *
     * @generated from protobuf enum value: reserve_recall = 1;
     */
    reserve_recall = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class DynDetailReply$Type extends MessageType<DynDetailReply> {
    constructor() {
        super("bilibili.app.dynamic.v2.DynDetailReply", [
            { no: 1, name: "item", kind: "message", T: () => DynamicItem }
        ]);
    }
    create(value?: PartialMessage<DynDetailReply>): DynDetailReply {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<DynDetailReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DynDetailReply): DynDetailReply {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynamicItem item */ 1:
                    message.item = DynamicItem.internalBinaryRead(reader, reader.uint32(), options, message.item);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DynDetailReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bilibili.app.dynamic.v2.DynamicItem item = 1; */
        if (message.item)
            DynamicItem.internalBinaryWrite(message.item, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynDetailReply
 */
export const DynDetailReply = new DynDetailReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynDetailReq$Type extends MessageType<DynDetailReq> {
    constructor() {
        super("bilibili.app.dynamic.v2.DynDetailReq", [
            { no: 2, name: "dynamic_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<DynDetailReq>): DynDetailReq {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.dynamicId = "";
        if (value !== undefined)
            reflectionMergePartial<DynDetailReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DynDetailReq): DynDetailReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string dynamic_id */ 2:
                    message.dynamicId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DynDetailReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string dynamic_id = 2; */
        if (message.dynamicId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.dynamicId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynDetailReq
 */
export const DynDetailReq = new DynDetailReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynamicItem$Type extends MessageType<DynamicItem> {
    constructor() {
        super("bilibili.app.dynamic.v2.DynamicItem", [
            { no: 1, name: "card_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DynamicType", DynamicType] },
            { no: 2, name: "item_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DynamicType", DynamicType] },
            { no: 3, name: "modules", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => Module },
            { no: 5, name: "has_fold", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "server_info", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<DynamicItem>): DynamicItem {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.cardType = 0;
        message.itemType = 0;
        message.modules = [];
        message.hasFold = 0;
        message.serverInfo = "";
        if (value !== undefined)
            reflectionMergePartial<DynamicItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DynamicItem): DynamicItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynamicType card_type */ 1:
                    message.cardType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.DynamicType item_type */ 2:
                    message.itemType = reader.int32();
                    break;
                case /* repeated bilibili.app.dynamic.v2.Module modules */ 3:
                    message.modules.push(Module.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 has_fold */ 5:
                    message.hasFold = reader.int32();
                    break;
                case /* string server_info */ 6:
                    message.serverInfo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DynamicItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bilibili.app.dynamic.v2.DynamicType card_type = 1; */
        if (message.cardType !== 0)
            writer.tag(1, WireType.Varint).int32(message.cardType);
        /* bilibili.app.dynamic.v2.DynamicType item_type = 2; */
        if (message.itemType !== 0)
            writer.tag(2, WireType.Varint).int32(message.itemType);
        /* repeated bilibili.app.dynamic.v2.Module modules = 3; */
        for (let i = 0; i < message.modules.length; i++)
            Module.internalBinaryWrite(message.modules[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* int32 has_fold = 5; */
        if (message.hasFold !== 0)
            writer.tag(5, WireType.Varint).int32(message.hasFold);
        /* string server_info = 6; */
        if (message.serverInfo !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.serverInfo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynamicItem
 */
export const DynamicItem = new DynamicItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Module$Type extends MessageType<Module> {
    constructor() {
        super("bilibili.app.dynamic.v2.Module", [
            { no: 1, name: "module_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DynModuleType", DynModuleType] },
            { no: 5, name: "module_dynamic", kind: "message", oneof: "moduleItem", T: () => ModuleDynamic }
        ]);
    }
    create(value?: PartialMessage<Module>): Module {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.moduleType = 0;
        message.moduleItem = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<Module>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Module): Module {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynModuleType module_type */ 1:
                    message.moduleType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.ModuleDynamic module_dynamic */ 5:
                    message.moduleItem = {
                        oneofKind: "moduleDynamic",
                        moduleDynamic: ModuleDynamic.internalBinaryRead(reader, reader.uint32(), options, (message.moduleItem as any).moduleDynamic)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Module, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bilibili.app.dynamic.v2.DynModuleType module_type = 1; */
        if (message.moduleType !== 0)
            writer.tag(1, WireType.Varint).int32(message.moduleType);
        /* bilibili.app.dynamic.v2.ModuleDynamic module_dynamic = 5; */
        if (message.moduleItem.oneofKind === "moduleDynamic")
            ModuleDynamic.internalBinaryWrite(message.moduleItem.moduleDynamic, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Module
 */
export const Module = new Module$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleDynamic$Type extends MessageType<ModuleDynamic> {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleDynamic", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ModuleDynamicType", ModuleDynamicType] },
            { no: 2, name: "dyn_archive", kind: "message", oneof: "moduleItem", T: () => MdlDynArchive }
        ]);
    }
    create(value?: PartialMessage<ModuleDynamic>): ModuleDynamic {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.type = 0;
        message.moduleItem = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<ModuleDynamic>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModuleDynamic): ModuleDynamic {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.ModuleDynamicType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynArchive dyn_archive */ 2:
                    message.moduleItem = {
                        oneofKind: "dynArchive",
                        dynArchive: MdlDynArchive.internalBinaryRead(reader, reader.uint32(), options, (message.moduleItem as any).dynArchive)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModuleDynamic, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bilibili.app.dynamic.v2.ModuleDynamicType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.MdlDynArchive dyn_archive = 2; */
        if (message.moduleItem.oneofKind === "dynArchive")
            MdlDynArchive.internalBinaryWrite(message.moduleItem.dynArchive, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleDynamic
 */
export const ModuleDynamic = new ModuleDynamic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynArchive$Type extends MessageType<MdlDynArchive> {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynArchive", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cover_left_text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cover_left_text_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cover_left_text_3", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "avid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "cid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "media_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.MediaType", MediaType] },
            { no: 10, name: "dimension", kind: "message", T: () => Dimension },
            { no: 11, name: "badge", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => VideoBadge },
            { no: 12, name: "can_play", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "stype", kind: "enum", T: () => ["bilibili.app.dynamic.v2.VideoType", VideoType] },
            { no: 14, name: "isPGC", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "inlineURL", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "EpisodeId", kind: "scalar", jsonName: "EpisodeId", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 17, name: "SubType", kind: "scalar", jsonName: "SubType", T: 5 /*ScalarType.INT32*/ },
            { no: 18, name: "PgcSeasonId", kind: "scalar", jsonName: "PgcSeasonId", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 19, name: "play_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 20, name: "duration", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 21, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 22, name: "is_preview", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 23, name: "badge_category", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => VideoBadge },
            { no: 24, name: "is_feature", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 25, name: "reserve_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ReserveType", ReserveType] },
            { no: 26, name: "bvid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 27, name: "view", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 28, name: "show_premiere_badge", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 29, name: "premiere_card", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 30, name: "show_progress", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 31, name: "part_duration", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 32, name: "part_progress", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<MdlDynArchive>): MdlDynArchive {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.title = "";
        message.cover = "";
        message.uri = "";
        message.coverLeftText1 = "";
        message.coverLeftText2 = "";
        message.coverLeftText3 = "";
        message.avid = 0n;
        message.cid = 0n;
        message.mediaType = 0;
        message.badge = [];
        message.canPlay = false;
        message.stype = 0;
        message.isPGC = false;
        message.inlineURL = "";
        message.episodeId = 0n;
        message.subType = 0;
        message.pgcSeasonId = 0n;
        message.playIcon = "";
        message.duration = 0n;
        message.jumpUrl = "";
        message.isPreview = false;
        message.badgeCategory = [];
        message.isFeature = false;
        message.reserveType = 0;
        message.bvid = "";
        message.view = 0;
        message.showPremiereBadge = false;
        message.premiereCard = false;
        message.showProgress = false;
        message.partDuration = 0n;
        message.partProgress = 0n;
        if (value !== undefined)
            reflectionMergePartial<MdlDynArchive>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MdlDynArchive): MdlDynArchive {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string cover_left_text_1 */ 4:
                    message.coverLeftText1 = reader.string();
                    break;
                case /* string cover_left_text_2 */ 5:
                    message.coverLeftText2 = reader.string();
                    break;
                case /* string cover_left_text_3 */ 6:
                    message.coverLeftText3 = reader.string();
                    break;
                case /* int64 avid */ 7:
                    message.avid = reader.int64().toBigInt();
                    break;
                case /* int64 cid */ 8:
                    message.cid = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.MediaType media_type */ 9:
                    message.mediaType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.Dimension dimension */ 10:
                    message.dimension = Dimension.internalBinaryRead(reader, reader.uint32(), options, message.dimension);
                    break;
                case /* repeated bilibili.app.dynamic.v2.VideoBadge badge */ 11:
                    message.badge.push(VideoBadge.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool can_play */ 12:
                    message.canPlay = reader.bool();
                    break;
                case /* bilibili.app.dynamic.v2.VideoType stype */ 13:
                    message.stype = reader.int32();
                    break;
                case /* bool isPGC */ 14:
                    message.isPGC = reader.bool();
                    break;
                case /* string inlineURL */ 15:
                    message.inlineURL = reader.string();
                    break;
                case /* int64 EpisodeId */ 16:
                    message.episodeId = reader.int64().toBigInt();
                    break;
                case /* int32 SubType */ 17:
                    message.subType = reader.int32();
                    break;
                case /* int64 PgcSeasonId */ 18:
                    message.pgcSeasonId = reader.int64().toBigInt();
                    break;
                case /* string play_icon */ 19:
                    message.playIcon = reader.string();
                    break;
                case /* int64 duration */ 20:
                    message.duration = reader.int64().toBigInt();
                    break;
                case /* string jump_url */ 21:
                    message.jumpUrl = reader.string();
                    break;
                case /* bool is_preview */ 22:
                    message.isPreview = reader.bool();
                    break;
                case /* repeated bilibili.app.dynamic.v2.VideoBadge badge_category */ 23:
                    message.badgeCategory.push(VideoBadge.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool is_feature */ 24:
                    message.isFeature = reader.bool();
                    break;
                case /* bilibili.app.dynamic.v2.ReserveType reserve_type */ 25:
                    message.reserveType = reader.int32();
                    break;
                case /* string bvid */ 26:
                    message.bvid = reader.string();
                    break;
                case /* int32 view */ 27:
                    message.view = reader.int32();
                    break;
                case /* bool show_premiere_badge */ 28:
                    message.showPremiereBadge = reader.bool();
                    break;
                case /* bool premiere_card */ 29:
                    message.premiereCard = reader.bool();
                    break;
                case /* bool show_progress */ 30:
                    message.showProgress = reader.bool();
                    break;
                case /* int64 part_duration */ 31:
                    message.partDuration = reader.int64().toBigInt();
                    break;
                case /* int64 part_progress */ 32:
                    message.partProgress = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MdlDynArchive, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string cover_left_text_1 = 4; */
        if (message.coverLeftText1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.coverLeftText1);
        /* string cover_left_text_2 = 5; */
        if (message.coverLeftText2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.coverLeftText2);
        /* string cover_left_text_3 = 6; */
        if (message.coverLeftText3 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.coverLeftText3);
        /* int64 avid = 7; */
        if (message.avid !== 0n)
            writer.tag(7, WireType.Varint).int64(message.avid);
        /* int64 cid = 8; */
        if (message.cid !== 0n)
            writer.tag(8, WireType.Varint).int64(message.cid);
        /* bilibili.app.dynamic.v2.MediaType media_type = 9; */
        if (message.mediaType !== 0)
            writer.tag(9, WireType.Varint).int32(message.mediaType);
        /* bilibili.app.dynamic.v2.Dimension dimension = 10; */
        if (message.dimension)
            Dimension.internalBinaryWrite(message.dimension, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.app.dynamic.v2.VideoBadge badge = 11; */
        for (let i = 0; i < message.badge.length; i++)
            VideoBadge.internalBinaryWrite(message.badge[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bool can_play = 12; */
        if (message.canPlay !== false)
            writer.tag(12, WireType.Varint).bool(message.canPlay);
        /* bilibili.app.dynamic.v2.VideoType stype = 13; */
        if (message.stype !== 0)
            writer.tag(13, WireType.Varint).int32(message.stype);
        /* bool isPGC = 14; */
        if (message.isPGC !== false)
            writer.tag(14, WireType.Varint).bool(message.isPGC);
        /* string inlineURL = 15; */
        if (message.inlineURL !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.inlineURL);
        /* int64 EpisodeId = 16; */
        if (message.episodeId !== 0n)
            writer.tag(16, WireType.Varint).int64(message.episodeId);
        /* int32 SubType = 17; */
        if (message.subType !== 0)
            writer.tag(17, WireType.Varint).int32(message.subType);
        /* int64 PgcSeasonId = 18; */
        if (message.pgcSeasonId !== 0n)
            writer.tag(18, WireType.Varint).int64(message.pgcSeasonId);
        /* string play_icon = 19; */
        if (message.playIcon !== "")
            writer.tag(19, WireType.LengthDelimited).string(message.playIcon);
        /* int64 duration = 20; */
        if (message.duration !== 0n)
            writer.tag(20, WireType.Varint).int64(message.duration);
        /* string jump_url = 21; */
        if (message.jumpUrl !== "")
            writer.tag(21, WireType.LengthDelimited).string(message.jumpUrl);
        /* bool is_preview = 22; */
        if (message.isPreview !== false)
            writer.tag(22, WireType.Varint).bool(message.isPreview);
        /* repeated bilibili.app.dynamic.v2.VideoBadge badge_category = 23; */
        for (let i = 0; i < message.badgeCategory.length; i++)
            VideoBadge.internalBinaryWrite(message.badgeCategory[i], writer.tag(23, WireType.LengthDelimited).fork(), options).join();
        /* bool is_feature = 24; */
        if (message.isFeature !== false)
            writer.tag(24, WireType.Varint).bool(message.isFeature);
        /* bilibili.app.dynamic.v2.ReserveType reserve_type = 25; */
        if (message.reserveType !== 0)
            writer.tag(25, WireType.Varint).int32(message.reserveType);
        /* string bvid = 26; */
        if (message.bvid !== "")
            writer.tag(26, WireType.LengthDelimited).string(message.bvid);
        /* int32 view = 27; */
        if (message.view !== 0)
            writer.tag(27, WireType.Varint).int32(message.view);
        /* bool show_premiere_badge = 28; */
        if (message.showPremiereBadge !== false)
            writer.tag(28, WireType.Varint).bool(message.showPremiereBadge);
        /* bool premiere_card = 29; */
        if (message.premiereCard !== false)
            writer.tag(29, WireType.Varint).bool(message.premiereCard);
        /* bool show_progress = 30; */
        if (message.showProgress !== false)
            writer.tag(30, WireType.Varint).bool(message.showProgress);
        /* int64 part_duration = 31; */
        if (message.partDuration !== 0n)
            writer.tag(31, WireType.Varint).int64(message.partDuration);
        /* int64 part_progress = 32; */
        if (message.partProgress !== 0n)
            writer.tag(32, WireType.Varint).int64(message.partProgress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynArchive
 */
export const MdlDynArchive = new MdlDynArchive$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Dimension$Type extends MessageType<Dimension> {
    constructor() {
        super("bilibili.app.dynamic.v2.Dimension", [
            { no: 1, name: "height", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "width", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "rotate", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Dimension>): Dimension {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.height = 0n;
        message.width = 0n;
        message.rotate = 0n;
        if (value !== undefined)
            reflectionMergePartial<Dimension>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Dimension): Dimension {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 height */ 1:
                    message.height = reader.int64().toBigInt();
                    break;
                case /* int64 width */ 2:
                    message.width = reader.int64().toBigInt();
                    break;
                case /* int64 rotate */ 3:
                    message.rotate = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Dimension, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 height = 1; */
        if (message.height !== 0n)
            writer.tag(1, WireType.Varint).int64(message.height);
        /* int64 width = 2; */
        if (message.width !== 0n)
            writer.tag(2, WireType.Varint).int64(message.width);
        /* int64 rotate = 3; */
        if (message.rotate !== 0n)
            writer.tag(3, WireType.Varint).int64(message.rotate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Dimension
 */
export const Dimension = new Dimension$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VideoBadge$Type extends MessageType<VideoBadge> {
    constructor() {
        super("bilibili.app.dynamic.v2.VideoBadge", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "text_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "bg_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "border_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "border_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "bg_style", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "bg_alpha", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "bg_alpha_night", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<VideoBadge>): VideoBadge {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.text = "";
        message.textColor = "";
        message.textColorNight = "";
        message.bgColor = "";
        message.bgColorNight = "";
        message.borderColor = "";
        message.borderColorNight = "";
        message.bgStyle = 0;
        message.bgAlpha = 0;
        message.bgAlphaNight = 0;
        if (value !== undefined)
            reflectionMergePartial<VideoBadge>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VideoBadge): VideoBadge {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string text_color */ 2:
                    message.textColor = reader.string();
                    break;
                case /* string text_color_night */ 3:
                    message.textColorNight = reader.string();
                    break;
                case /* string bg_color */ 4:
                    message.bgColor = reader.string();
                    break;
                case /* string bg_color_night */ 5:
                    message.bgColorNight = reader.string();
                    break;
                case /* string border_color */ 6:
                    message.borderColor = reader.string();
                    break;
                case /* string border_color_night */ 7:
                    message.borderColorNight = reader.string();
                    break;
                case /* int32 bg_style */ 8:
                    message.bgStyle = reader.int32();
                    break;
                case /* int32 bg_alpha */ 9:
                    message.bgAlpha = reader.int32();
                    break;
                case /* int32 bg_alpha_night */ 10:
                    message.bgAlphaNight = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VideoBadge, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string text_color = 2; */
        if (message.textColor !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.textColor);
        /* string text_color_night = 3; */
        if (message.textColorNight !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.textColorNight);
        /* string bg_color = 4; */
        if (message.bgColor !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.bgColor);
        /* string bg_color_night = 5; */
        if (message.bgColorNight !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.bgColorNight);
        /* string border_color = 6; */
        if (message.borderColor !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.borderColor);
        /* string border_color_night = 7; */
        if (message.borderColorNight !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.borderColorNight);
        /* int32 bg_style = 8; */
        if (message.bgStyle !== 0)
            writer.tag(8, WireType.Varint).int32(message.bgStyle);
        /* int32 bg_alpha = 9; */
        if (message.bgAlpha !== 0)
            writer.tag(9, WireType.Varint).int32(message.bgAlpha);
        /* int32 bg_alpha_night = 10; */
        if (message.bgAlphaNight !== 0)
            writer.tag(10, WireType.Varint).int32(message.bgAlphaNight);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.VideoBadge
 */
export const VideoBadge = new VideoBadge$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Device$Type extends MessageType<Device> {
    constructor() {
        super("bilibili.app.dynamic.v2.Device", [
            { no: 1, name: "app_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "build", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "buvid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "mobi_app", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "platform", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "device", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "channel", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "brand", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "model", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "osver", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "fp_local", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "fp_remote", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "version_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "fp", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "fts", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Device>): Device {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.appId = 0;
        message.build = 0;
        message.buvid = "";
        message.mobiApp = "";
        message.platform = "";
        message.device = "";
        message.channel = "";
        message.brand = "";
        message.model = "";
        message.osver = "";
        message.fpLocal = "";
        message.fpRemote = "";
        message.versionName = "";
        message.fp = "";
        message.fts = 0n;
        if (value !== undefined)
            reflectionMergePartial<Device>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Device): Device {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 app_id */ 1:
                    message.appId = reader.int32();
                    break;
                case /* int32 build */ 2:
                    message.build = reader.int32();
                    break;
                case /* string buvid */ 3:
                    message.buvid = reader.string();
                    break;
                case /* string mobi_app */ 4:
                    message.mobiApp = reader.string();
                    break;
                case /* string platform */ 5:
                    message.platform = reader.string();
                    break;
                case /* string device */ 6:
                    message.device = reader.string();
                    break;
                case /* string channel */ 7:
                    message.channel = reader.string();
                    break;
                case /* string brand */ 8:
                    message.brand = reader.string();
                    break;
                case /* string model */ 9:
                    message.model = reader.string();
                    break;
                case /* string osver */ 10:
                    message.osver = reader.string();
                    break;
                case /* string fp_local */ 11:
                    message.fpLocal = reader.string();
                    break;
                case /* string fp_remote */ 12:
                    message.fpRemote = reader.string();
                    break;
                case /* string version_name */ 13:
                    message.versionName = reader.string();
                    break;
                case /* string fp */ 14:
                    message.fp = reader.string();
                    break;
                case /* int64 fts */ 15:
                    message.fts = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Device, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 app_id = 1; */
        if (message.appId !== 0)
            writer.tag(1, WireType.Varint).int32(message.appId);
        /* int32 build = 2; */
        if (message.build !== 0)
            writer.tag(2, WireType.Varint).int32(message.build);
        /* string buvid = 3; */
        if (message.buvid !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.buvid);
        /* string mobi_app = 4; */
        if (message.mobiApp !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.mobiApp);
        /* string platform = 5; */
        if (message.platform !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.platform);
        /* string device = 6; */
        if (message.device !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.device);
        /* string channel = 7; */
        if (message.channel !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.channel);
        /* string brand = 8; */
        if (message.brand !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.brand);
        /* string model = 9; */
        if (message.model !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.model);
        /* string osver = 10; */
        if (message.osver !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.osver);
        /* string fp_local = 11; */
        if (message.fpLocal !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.fpLocal);
        /* string fp_remote = 12; */
        if (message.fpRemote !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.fpRemote);
        /* string version_name = 13; */
        if (message.versionName !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.versionName);
        /* string fp = 14; */
        if (message.fp !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.fp);
        /* int64 fts = 15; */
        if (message.fts !== 0n)
            writer.tag(15, WireType.Varint).int64(message.fts);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Device
 */
export const Device = new Device$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Metadata$Type extends MessageType<Metadata> {
    constructor() {
        super("bilibili.app.dynamic.v2.Metadata", [
            { no: 1, name: "access_key", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "mobi_app", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "device", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "build", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "channel", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "buvid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "platform", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Metadata>): Metadata {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.accessKey = "";
        message.mobiApp = "";
        message.device = "";
        message.build = 0;
        message.channel = "";
        message.buvid = "";
        message.platform = "";
        if (value !== undefined)
            reflectionMergePartial<Metadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Metadata): Metadata {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string access_key */ 1:
                    message.accessKey = reader.string();
                    break;
                case /* string mobi_app */ 2:
                    message.mobiApp = reader.string();
                    break;
                case /* string device */ 3:
                    message.device = reader.string();
                    break;
                case /* int32 build */ 4:
                    message.build = reader.int32();
                    break;
                case /* string channel */ 5:
                    message.channel = reader.string();
                    break;
                case /* string buvid */ 6:
                    message.buvid = reader.string();
                    break;
                case /* string platform */ 7:
                    message.platform = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Metadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string access_key = 1; */
        if (message.accessKey !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.accessKey);
        /* string mobi_app = 2; */
        if (message.mobiApp !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.mobiApp);
        /* string device = 3; */
        if (message.device !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.device);
        /* int32 build = 4; */
        if (message.build !== 0)
            writer.tag(4, WireType.Varint).int32(message.build);
        /* string channel = 5; */
        if (message.channel !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.channel);
        /* string buvid = 6; */
        if (message.buvid !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.buvid);
        /* string platform = 7; */
        if (message.platform !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.platform);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Metadata
 */
export const Metadata = new Metadata$Type();
/**
 * @generated ServiceType for protobuf service bilibili.app.dynamic.v2.Dynamic
 */
export const Dynamic = new ServiceType("bilibili.app.dynamic.v2.Dynamic", [
    { name: "DynDetail", options: {}, I: DynDetailReq, O: DynDetailReply }
]);
